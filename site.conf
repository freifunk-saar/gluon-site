-- This is an example site configuration for Gluon v2014.3.x
--
-- Take a look at the documentation located at
-- http://gluon.readthedocs.org/ for details.
--
-- This configuration will not work as it. You're required to make
-- community specific changes to it!
{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456.
  hostname_prefix = 'ffsaar-',

  -- Name of the community.
  site_name = 'Freifunk Saar',

  -- Shorthand of the community.
  site_code = 'ffsaar',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.24.192.0/18',
  prefix6 = 'fd4e:f2d7:88d2:ffff::/64',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time.zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {
    'gw1.ffsaar', 
    'gw2.ffsaar',
    'gw3.ffsaar',
    'gw4.ffsaar',
    'gw5.ffsaar',
    'gw6.ffsaar',
    'gw7.ffsaar',
    'gw8.ffsaar',
  },

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuratoin for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,

    -- ESSID used for client network.
    ssid = 'saar.freifunk.net',

    -- Specifies the channel width in 802.11n and 802.11ac mode.
    -- Possible values are:
    -- HT20 (single 20MHz channel),
    -- HT40- (2x 20MHz channels, secondary below)
    -- HT40+ (2x 20MHz channels, secondary above)
    htmode = 'HT20',

    -- Adjust these values!
    mesh_ssid = '5e:ba:7a:d2:c4:b9',  -- ESSID used for mesh
    mesh_bssid = '5e:ba:7a:d2:c4:b9', -- BSSID used for mesh

    -- Bitrate used for multicast/broadcast packets.
    mesh_mcast_rate = 12000,
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel and htmode.
  wifi5 = {
    ssid = 'saar.freifunk.net',
    channel = 36,
    htmode = 'HT20',
    mesh_ssid = '5e:ba:7a:d2:c4:b9',
    mesh_bssid = '5e:ba:7a:d2:c4:b9',
    mesh_mcast_rate = 12000,
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.24.192.1',
    ip6 = 'fd4e:f2d7:88d2:ffff::1',

    -- anycast MAC of all nodes
    mac = '32:3d:f9:8f:01:52',
  },

  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.
  fastd_mesh_vpn = {
    enabled = true,
    -- List of crypto-methods to use.
    methods = {'salsa2012+umac'},
    mtu = 1406,
    groups = {
      backbone = {
        -- Limit number of connected peers to reduce bandwidth.
        limit = 1,

        -- List of peers.
        peers = {
          gw1 = {
            key = '5136a920a8c7aa9ae2ca1c2a1e33ea8c45e01501fac0f02b9d6a05b167ac5993',
            remotes = {
                'ipv4 "gw1.saar.freifunk.net" port 10003', 
                'ipv6 "gw1.saar.freifunk.net" port 10003',
	    },
          },
  
          gw2 = {
            key = '80859883c8a22867b20082078ab0934bdf58f556e7acda90730ea282d8da9388',
            remotes = {
                'ipv4 "gw2.saar.freifunk.net" port 10003', 
                'ipv6 "gw2.saar.freifunk.net" port 10003',
	    },
          },

          gw3 = {
            key = '711d1dc6f2048ffe88997441612ca764595b414abea5495c4f3ce746c72774e6',
            remotes = {
                'ipv4 "gw3.saar.freifunk.net" port 10003', 
                'ipv6 "gw3.saar.freifunk.net" port 10003',
	    },
          },

          gw4 = {
            key = '33e02014b00a45bc8249b4428a9da614a370b5e386fa5d8d66c325941aa27568',
            remotes = {
                'ipv4 "gw4.saar.freifunk.net" port 10003', 
                'ipv6 "gw4.saar.freifunk.net" port 10003',
	    },
          },

          gw5 = {
            key = '869e3049efed00b890cdc6e085a453fbc320b0528489cc0bee91ed29d0865dfe',
            remotes = {
                'ipv4 "gw5.saar.freifunk.net" port 10003', 
                'ipv6 "gw5.saar.freifunk.net" port 10003',
	    },
          },

          gw6 = {
            key = 'f29968ba7a58de84e05c14b9b2d5eaa65326b7e85106a022644c5c843287048a',
            remotes = {
                'ipv4 "gw6.saar.freifunk.net" port 10003', 
                'ipv6 "gw6.saar.freifunk.net" port 10003',
	    },
          },

          gw7 = {
            key = 'fe0b1f78395b1f49ddf3480593ec741afd07998a73bffa543cf8c4e7ee3aadbc',
            remotes = {
                'ipv4 "gw7.saar.freifunk.net" port 10003', 
                'ipv6 "gw7.saar.freifunk.net" port 10003',
	    },
          },

          gw8 = {
            key = '9a02502c040a9184f12789da88209d4e91412de3be36664fc0290be5437b74ab',
            remotes = {
                'ipv4 "gw8.saar.freifunk.net" port 10003', 
                'ipv6 "gw8.saar.freifunk.net" port 10003',
	    },
          },
        },
      },
    },
  },

  autoupdater = {
    enabled = true,
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'stable',

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
          'http://mgmt.ffsaar/firmware/stable/sysupgrade',
          'http://mgmt.saar.freifunk.net/firmware/stable/sysupgrade',
          'http://[fd4e:f2d7:88d2:ffff::250]/firmware/stable/sysupgrade',
          'http://[2a01:608:ffff:9876:cafe:babe:ff:5aaa]/firmware/stable/sysupgrade',
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
          '1672831cfc45652702485adb1ce5e6c7fbaed0dd7f577e7ac13492c58aa9c5f5', -- Tobias
          'd7c6937bc769cf54fc8eb440d4743fe12499a3b40e2d5d9195e04d52974d3732', -- Constantin
        },
      },

      beta = {
        name = 'beta',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
          'http://mgmt.ffsaar/firmware/beta/sysupgrade',
          'http://mgmt.saar.freifunk.net/firmware/beta/sysupgrade',
          'http://[fd4e:f2d7:88d2:ffff::250]/firmware/beta/sysupgrade',
          'http://[2a01:608:ffff:9876:cafe:babe:ff:5aaa]/firmware/beta/sysupgrade',
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
          '1672831cfc45652702485adb1ce5e6c7fbaed0dd7f577e7ac13492c58aa9c5f5', -- Tobias
          'd7c6937bc769cf54fc8eb440d4743fe12499a3b40e2d5d9195e04d52974d3732', -- Constantin
        },
      },

      experimental = {
        name = 'experimental',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
          'http://mgmt.ffsaar/firmware/experimental/sysupgrade',
          'http://mgmt.saar.freifunk.net/firmware/experimental/sysupgrade',
          'http://[fd4e:f2d7:88d2:ffff::250]/firmware/experimental/sysupgrade',
          'http://[2a01:608:ffff:9876:cafe:babe:ff:5aaa]/firmware/experimental/sysupgrade',
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
          'dda7d8951b20b8cbd97f24812a13e1337e39d92c1edfe99a0636da21ae6be1c8', -- Nightly Buildbot
          '1672831cfc45652702485adb1ce5e6c7fbaed0dd7f577e7ac13492c58aa9c5f5', -- Tobias
          'd7c6937bc769cf54fc8eb440d4743fe12499a3b40e2d5d9195e04d52974d3732', -- Constantin
        },
      },

    },
  },

  -- Bandwidth limiting
  simple_tc = {
    mesh_vpn = {
      ifname = 'mesh-vpn',

      -- You may enable it by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      limit_egress = 2000,

      -- Default download limit (kbit/s).
      limit_ingress = 8000,
    },
  },

  opkg_repo = 'http://mgmt.ffsaar/openwrt/barrier_breaker/14.07/%S/packages',
}
